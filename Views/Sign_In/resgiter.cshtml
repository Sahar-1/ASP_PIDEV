@{
    Layout = null;
}
@model PiDevEsprit.Models.DBO_User
@{
    ViewBag.Title = "Resgiter";
}

<html>
<head>
    @Styles.Render("~/Content/css/login-modal.css")
</head>
<body>
    <div id="login-button">
        <img src="https://dqcgrsy5v35b9.cloudfront.net/cruiseplanner/assets/img/icons/login-w-icon.png" />

    </div>
    <div id="container-register">
        <h1>Registration</h1>
        <span class="close-btn">
            <img src="https://cdn4.iconfinder.com/data/icons/miu/22/circle_close_delete_-128.png" />
        </span>

        <form id="register-form">
            <div class="input-group">

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>

            <div class="input-group">

                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name", } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

            </div>

            <div class="input-group">

                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name", } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

            </div>

            <div class="input-group">

                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password", @type = "password", @Id = "pass" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="input-group">

                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confim Password", @type = "password", @Id = "pass1" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                <p id="validate-status"></p>
            </div>

            <div class="input-group">


                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "datepicker", @placeholder = "Click to enter your birth date", } })

            </div>
            <div class="checkbox">
                <label>
                    <input type="checkbox"> Agree the terms and policy
                </label>
            </div>
            <p style="color:red">@ViewBag.ErrorMessage</p>
            <button type="submit" class="">Register</button>
            <div class="social-login-content">
                <div class="social-button">
                    <button type="button" class="btn social facebook btn-flat btn-addon mb-3"><i class="ti-facebook"></i>Register with facebook</button>
                    <button type="button" class="btn social twitter btn-flat btn-addon mt-2"><i class="ti-twitter"></i>Register with twitter</button>
                </div>
            </div>
            <div class="register-link m-t-15 text-center">
                <p>Already have account ? <a @Html.ActionLink("Sign In", "SignIn", "Sign_In")</a></p>
            </div>
            <p id="errorMsg" style="color:red"></p>
        </form>
    </div>
    <div id="container">
        <h1>Log In</h1>
        <span class="close-btn">
            <img src="https://cdn4.iconfinder.com/data/icons/miu/22/circle_close_delete_-128.png" />
        </span>

        <form id="login-form">
            <div class="input-group">


                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>
            <div class="input-group">

                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            </div>
            <button type="submit" class="">Log in</button>
            <div id="remember-container">
                <input type="checkbox" id="checkbox-2-1" class="checkbox" checked="checked" />
                <span id="remember">Remember me</span>
                <span id="forgot" onclick="location.href='@Url.Action("ForgotPassword","Sign_In")'">Forgot Password</span>

                <span id="register" onclick="location.href='@Url.Action("Resgiter","Sign_In")'">Sign Up</span>

            </div>
            <p id="errorMsg" style="color:red"></p>

        </form>
    </div>

    <script src="//cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js"></script>
    <script src="//code.jquery.com/jquery-3.6.0.min.js"
            integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
            crossorigin="anonymous"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#register-form').submit(function (e) {
                e.preventDefault();
                let dataToPost = $('#register-form').serializeArray();
                $.post("Resgiter", dataToPost)
                    .done(function (response, status) {
                        if (response.result == 'InvalidLogin') {
                            //show invalid login
                        }
                        else if (response.result == 'Error') {
                            $("#errorMsg").text(response.message)
                        }

                        if (response.result == 'Redirect') {
                            window.location = response.url;
                        }
                    })
                    .fail(function (status, error) {
                        console.log(error);
                        console.log(status);
                        return false;
                    })
            });

            $('#login-button').click(function () {
                $('#login-button').fadeOut("slow", function () {
                    //opening sign in container
                    $("#container").fadeIn();
                    TweenMax.from("#container", .4, { scale: 0, ease: Sine.easeInOut });
                    TweenMax.to("#container", .4, { scale: 1, ease: Sine.easeInOut });
                    //closing registration container
                    $("#container-register").fadeOut();
                    TweenMax.from("#container", .4, { scale: 0, ease: Sine.easeInOut });
                    TweenMax.to("#container", .4, { scale: 1, ease: Sine.easeInOut });
                });
            });

            $(".close-btn").click(function () {
                TweenMax.from("#container", .4, { scale: 1, ease: Sine.easeInOut });
                TweenMax.to("#container", .4, { scale: 0, ease: Sine.easeInOut });
                $("#container,#container-register, #forgotten-container").fadeOut(800, function () {
                    $("#login-button").fadeIn(800);
                });
            });

            $(".datepicker").datepicker({
                dateFormat: "yy-mm-dd",
                changemonth: true,
                changeyear: true
            });

            $('#pass, #pass1').on('keyup', function () {
                if ($('#pass').val() == $('#pass1').val()) {
                    $('#pass1').html('Matching').css('color', 'green');

                } else
                    $('#pass1').html('Not Matching').css('color', 'red');
            });
        });
    </script>
</body>
</html>




